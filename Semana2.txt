1) A CI é a integração contínua, ou seja, o código é desenvolvido e integrado continuamente, commits, features, não necessariamente entregando o produto ou fazendo release. O CD é a entrega contínua, que é o passo depois da integração contínua, pois, além do código ser integrado continuamente, ele também é entregue de maneira contínua nos vários ambientes, passando por uma esteira que realiza várias etapas, contrução, qualidade, segurança e uma versão do produto, entretando, o deploy ainda envolve a interação humana, todo o resto é automatizado. O deploy contínuo é quando o deploy de uma entrega contínua também é automatizado.

2) O pipeline de entrega é a esteira que um código passa para ter um artefato e realizar o deploy (se tiver o deploy contínuo). Ele passa por várias etapas, a primeira acontece depois do commit, em que é realizado os testes unitários, realizando o build da aplicação. Depois ele passa por outra rodada de testes, que envolvem testes mais lentos (testes de integração, testes de desempenho, de fumaça, entre outros), além de ter um teste de qualidade, que envolve tanto o código estático quanto a execução dinâmica. Depois disso, é realizado um deploy no ambiente de homologação, onde é realizado os testes de aceitação do cliente, das funcionalidades. Por último, é realizado o deploy do ambiente de produção.

3)Um release é o blue/green deployment. Nesse deployment, existe dois ambientes, o ambiente antigo, com a versão antiga do software, e o ambiente novo, com a nova versão do código. Os dois ambientes tem a mesma configuração, de modo que, com a alteração de uma url, é possível trocar o serviço novo pelo antigo sem downtime, ou seja, sem o serviço ficar parado. Em serviços críticos, ele possui uma grande vantagem por não ter downtime.